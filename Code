package XOXConsole;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class TicTacToeV1 {
    static ArrayList<Integer> playerPosition1 = new ArrayList<>();
    static ArrayList<Integer> playerPosition2 = new ArrayList<>();
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        char GameBoard[][] = new char[3][3];
        char Players [] = {'X','O'};
        ArrayList<Integer> moveRecord = new ArrayList<>();
        int i = 0;
        int q = 0;

        System.out.println("Welcome the game");
        System.out.println("X Starts the game");
        ShowGameBoard(GameBoard);
        while (true){

            System.out.println("Enter your placement 1 to 9");
            int pos = s.nextInt();
            boolean check = false;
            moveRecord.add(pos);
            for(int p = moveRecord.size()-2;p>=0;p--){
                if(moveRecord.get(moveRecord.size()-1)==moveRecord.get(p)){
                    System.out.println("You Cant Put your char to this postion");
                    moveRecord.remove(moveRecord.size()-1);
                    check = true;
                    break;
                }
            }
            if(check)
                continue;
            q++;
            switch (pos){
                case 1:

                    GameBoard[0][0] = Players[i];
                    break;
                case 2:
                    GameBoard[0][1] =Players[i] ;
                    break;
                case 3:
                    GameBoard[0][2] = Players[i];
                    break;
                case 4:
                    GameBoard[1][0] = Players[i];
                    break;
                case 5:
                    GameBoard[1][1] = Players[i];
                    break;
                case 6:
                    GameBoard[1][2] = Players[i];
                    break;
                case 7:
                    GameBoard[2][0] = Players[i];
                    break;
                case 8:
                    GameBoard[2][1] = Players[i];
                    break;
                case 9:
                    GameBoard[2][2] = Players[i];
                    break;
                default:
                    System.out.println("Invalid Option try again");
                    continue;
            }
            ShowGameBoard(GameBoard);


            if(i == 0){
                playerPosition1.add(pos);
                i = 1; }
            else{
                playerPosition2.add(pos);
                i = 0; }
            String result = WhoIsWin();
            System.out.println(result);
        }
    }
public static void ShowGameBoard(char x[][]){
        for (int i = 0; i<x.length;i++){
            for(int j =0;j<x.length;j++){
                if(x[i][j] == 0)
                    System.out.print(" [   ] ");
                else
                System.out.print(" [ "+x[i][j]+" ] ");
            }
            System.out.println();
        }
}
public static String  WhoIsWin(){
        List topRow = Arrays.asList(1,2,3);
    List  midRow = Arrays.asList(4,5,6);
    List  sideRow = Arrays.asList(7,8,9);
    List  leftcol= Arrays.asList(1,4,7);
    List  midcol = Arrays.asList(2,5,8);
    List  rightcol = Arrays.asList(3,6,9);
    List  diag1 = Arrays.asList(1,5,9);
    List  diag2 = Arrays.asList(3,5,7);
    List<List> winning = new ArrayList<>();
    winning.add(topRow);
    winning.add(midRow);
    winning.add(sideRow);
    winning.add(leftcol);
    winning.add(rightcol);
    winning.add(midcol);
    winning.add(diag1);
    winning.add(diag2);
    winning.add(topRow);
    for(List l: winning )
        if(playerPosition1.containsAll(l)){
            System.out.println("Player 1 has won");
            System.exit(0);}
        else if(playerPosition2.containsAll(l)){
            System.out.println("Player 2 has won");
            System.exit(0);}
        else if(playerPosition1.size() + playerPosition2.size() ==0){
            System.out.println("Draw!!");
            System.exit(0);}
        return "";
}
}
